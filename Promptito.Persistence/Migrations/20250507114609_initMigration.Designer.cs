// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Promptito.Persistence;

#nullable disable

namespace Promptito.Persistence.Migrations
{
    [DbContext(typeof(PromptitoDbContext))]
    [Migration("20250507114609_initMigration")]
    partial class initMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ColeccionPrompt", b =>
                {
                    b.Property<int>("ListaColeccionesId")
                        .HasColumnType("integer");

                    b.Property<int>("ListaPromptsId")
                        .HasColumnType("integer");

                    b.HasKey("ListaColeccionesId", "ListaPromptsId");

                    b.HasIndex("ListaPromptsId");

                    b.ToTable("ColeccionPrompt");
                });

            modelBuilder.Entity("LlmPrompt", b =>
                {
                    b.Property<int>("ListaLlmsId")
                        .HasColumnType("integer");

                    b.Property<int>("ListaPromptsId")
                        .HasColumnType("integer");

                    b.HasKey("ListaLlmsId", "ListaPromptsId");

                    b.HasIndex("ListaPromptsId");

                    b.ToTable("LlmPrompt");
                });

            modelBuilder.Entity("PromptTema", b =>
                {
                    b.Property<int>("ListaPromptsId")
                        .HasColumnType("integer");

                    b.Property<int>("ListaTemasId")
                        .HasColumnType("integer");

                    b.HasKey("ListaPromptsId", "ListaTemasId");

                    b.HasIndex("ListaTemasId");

                    b.ToTable("PromptTema");
                });

            modelBuilder.Entity("PromptUsuario", b =>
                {
                    b.Property<int>("ListaPromptsFavoritosId")
                        .HasColumnType("integer");

                    b.Property<int>("ListaUsuariosEnFavoritosId")
                        .HasColumnType("integer");

                    b.HasKey("ListaPromptsFavoritosId", "ListaUsuariosEnFavoritosId");

                    b.HasIndex("ListaUsuariosEnFavoritosId");

                    b.ToTable("PromptUsuario");
                });

            modelBuilder.Entity("Promptito.Domain.Llm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Llms");
                });

            modelBuilder.Entity("Promptito.Domain.Modelos.Coleccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Colecciones");
                });

            modelBuilder.Entity("Promptito.Domain.Prompt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("TextoContenido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Prompts");
                });

            modelBuilder.Entity("Promptito.Domain.Tema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Temas");
                });

            modelBuilder.Entity("Promptito.Domain.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ColeccionPrompt", b =>
                {
                    b.HasOne("Promptito.Domain.Modelos.Coleccion", null)
                        .WithMany()
                        .HasForeignKey("ListaColeccionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promptito.Domain.Prompt", null)
                        .WithMany()
                        .HasForeignKey("ListaPromptsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LlmPrompt", b =>
                {
                    b.HasOne("Promptito.Domain.Llm", null)
                        .WithMany()
                        .HasForeignKey("ListaLlmsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promptito.Domain.Prompt", null)
                        .WithMany()
                        .HasForeignKey("ListaPromptsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PromptTema", b =>
                {
                    b.HasOne("Promptito.Domain.Prompt", null)
                        .WithMany()
                        .HasForeignKey("ListaPromptsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promptito.Domain.Tema", null)
                        .WithMany()
                        .HasForeignKey("ListaTemasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PromptUsuario", b =>
                {
                    b.HasOne("Promptito.Domain.Prompt", null)
                        .WithMany()
                        .HasForeignKey("ListaPromptsFavoritosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promptito.Domain.Usuario", null)
                        .WithMany()
                        .HasForeignKey("ListaUsuariosEnFavoritosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Promptito.Domain.Prompt", b =>
                {
                    b.HasOne("Promptito.Domain.Usuario", "UsuarioCreador")
                        .WithMany("ListaPromptsCreados")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioCreador");
                });

            modelBuilder.Entity("Promptito.Domain.Usuario", b =>
                {
                    b.Navigation("ListaPromptsCreados");
                });
#pragma warning restore 612, 618
        }
    }
}
